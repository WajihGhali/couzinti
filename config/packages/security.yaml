security:
    access_decision_manager:
        strategy: affirmative
    encoders:
        App\Entity\User : bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        database_users:
            entity: {class: App\Entity\User, property: username}
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            pattern: ^/
            form_login:
                check_path: security_login
                login_path: security_login
                csrf_token_generator: security.csrf.token_manager
                default_target_path: home
            #                always_use_default_target_path: false
            #                use_referer: true #last visited page
            #                failure_path:
            #                username_parameter: _username
            #                password_parameter: _password
            #                csrf_parameter:
            logout:
                path: security_logout
                target: home

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            #http_basic: ~
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    #        - { path: ^/micro-post, roles: ROLE_USER }
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

